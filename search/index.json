[{"content":"下载地址：https://github.com/yutianqaq/SharpFileTimeSetter\n简介 用于自定义文件时间属性，实现文件属性获取与自定义创建、修改、访问时间。\n还可以与同步指定文件的时间属性\n帮助 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 SharpFileTimeSetter.exe --help Usage: SharpSharpFileTimeSetter --file \u0026lt;path\u0026gt; [--get] [--creation \u0026lt;date\u0026gt;] [--modification \u0026lt;date\u0026gt;] [--access \u0026lt;date\u0026gt;] SharpFileTimeSetter --sync \u0026lt;sourceFile\u0026gt; \u0026lt;targetFile\u0026gt; Example: SharpFileTimeSetter --file test.txt --creation \u0026#34;2025-01-01 12:00:00\u0026#34; --modification \u0026#34;2025-01-02 14:00:00\u0026#34; SharpFileTimeSetter --file test.txt --get SharpFileTimeSetter --sync source.txt target.txt Arguments: --file Path to the target file (required). --get Get the current creation, modification, and access time of the file. --creation Creation time to set (optional, format: yyyy-MM-dd HH:mm:ss). --modification Modification time to set (optional, format: yyyy-MM-dd HH:mm:ss). --access Access time to set (optional, format: yyyy-MM-dd HH:mm:ss). --sync Synchronize time properties from source file to target file. \u0026lt;sourceFile\u0026gt; Source file whose time will be copied. \u0026lt;targetFile\u0026gt; Target file whose time will be updated. 例子 创建测试文件\n1 echo test \u0026gt; test 获取文件时间属性\n1 2 3 4 5 SharpFileTimeSetter.exe --file test --get File: test Creation Time: 2025/1/25 13:17:58 Modification Time: 2025/1/25 13:17:58 Access Time: 2025/1/25 13:17:58 修改文件属性\n1 2 3 4 5 SharpFileTimeSetter.exe --file test --creation \u0026#34;1999-09-09 12:00:00\u0026#34; --modification \u0026#34;1999-09-09 12:00:00\u0026#34; --access \u0026#34;1999-09-09 12:00:00\u0026#34; Creation time set to 1999/9/9 12:00:00. Modification time set to 1999/9/9 12:00:00. Access time set to 1999/9/9 12:00:00. File time properties updated successfully. 检查修改后的属性\n同步指定文件的时间属性\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 创建测试文件 PS D:\\bin\\Debug\u0026gt; echo test2 \u0026gt; test2 PS D:\\bin\\Debug\u0026gt; .\\SharpFileTimeSetter.exe --file test2 --get File: test2 Creation Time: 2025/1/25 13:22:20 Modification Time: 2025/1/25 13:22:20 Access Time: 2025/1/25 13:22:20 # 将文件 test 的时间属性同步给 test2 PS D:\\bin\\Debug\u0026gt; .\\SharpFileTimeSetter.exe --sync test test2 Synced times from source \u0026#39;test\u0026#39; to target \u0026#39;test2\u0026#39;. PS D:\\bin\\Debug\u0026gt; .\\SharpFileTimeSetter.exe --file test2 --get File: test2 Creation Time: 1999/9/9 12:00:00 Modification Time: 1999/9/9 12:00:00 Access Time: 2025/1/25 13:19:54 ","date":"2025-01-25T00:00:00Z","permalink":"https://yutianovo.github.com/p/sharpfiletimesetter-%E7%94%A8%E4%BA%8E%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E4%BB%B6%E7%9A%84%E6%97%B6%E9%97%B4%E5%B1%9E%E6%80%A7/","title":"SharpFileTimeSetter-用于自定义文件的时间属性"},{"content":"docs/docs/framework/install/dotnet-35-windows.md at main · dotnet/docs\nhttps://github.com/dotnet/docs/blob/main/docs/framework/install/dotnet-35-windows.md\n","date":"2025-01-25T00:00:00Z","permalink":"https://yutianovo.github.com/p/%E5%9C%A8-windows-11-%E4%B8%AD%E5%AE%89%E8%A3%85-.net3.5/","title":"在 Windows 11 中安装 .net3.5"},{"content":" 1 2 3 4 5 md C:\\$SysReset\\Framework\\Stack\\ copy evil.dll C:\\$SysReset\\Framework\\Stack\\RjvPlatform.dll C:\\Windows\\System32\\SystemResetPlatform\\SystemResetPlatform.exe ","date":"2025-01-25T00:00:00Z","permalink":"https://yutianovo.github.com/p/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81%E6%8A%80%E5%B7%A7-1/","title":"权限维持技巧-1"},{"content":"参考视频：https://www.youtube.com/watch?v=dnE7c0ELEH8\n参考文章：https://blog.networkchuck.com/posts/my-insane-blog-pipeline/\n","date":"2024-11-30T00:00:00Z","permalink":"https://yutianovo.github.com/p/%E4%BD%BF%E7%94%A8obsdian%E5%86%99%E6%96%87%E7%AB%A0%E5%B9%B6%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E5%8F%91%E5%B8%83%E5%88%B0hugo%E6%B5%8B%E8%AF%95/","title":"使用Obsdian写文章并通过脚本发布到Hugo测试"},{"content":"不会自动换行 打开 hugo 博客的文件夹，全局搜索 goldmark\n如果是 toml 格式，就改为下面的内容\n1 2 3 [goldmark.renderer] unsafe = true hardwraps = true yaml 格式\n1 2 3 4 markup: goldmark: renderer: hardWraps: true ","date":"2024-11-25T22:48:38+08:00","permalink":"https://yutianovo.github.com/p/hugo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%B6%E7%9A%84%E9%97%AE%E9%A2%98/","title":"Hugo 博客搭建时的问题"},{"content":"来到 Profile 选中订阅地址，点击右键选择 Open File 或者 Edit File\n在 proxies 上方新增如下内容\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 listeners: - name: mixed-in type: mixed port: 27891 listen: 127.0.0.1 proxy: proxies 中的 name 字段 - 美国节点 users: - admin: password - name: socks-in type: socks port: 27892 listen: 127.0.0.1 proxy: proxies 中的 name 字段 - 新加坡节点 - name: http-in type: http port: 27893 listen: 127.0.0.1 proxy: proxies 中的 name 字段 - 香港节点 [!note]\n当有 users 字段时将作为需认证的代理\nmixed 为将socks/http合并，socks 为仅限socks，http 为仅限 http\nname 需要唯一\nproxy 字段需要填写对应的 proxies 中的 name 字段\n以下配置将在本地启动一个节点，归属为香港，并开放同时支持 HTTP 和 SOCKS 协议的端口 17891\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 port: 7890 socks-port: 7891 allow-lan: true mode: Rule log-level: info external-controller: 127.0.0.1:9090 listeners: - name: mixed-in type: mixed port: 27891 listen: 127.0.0.1 proxy: \u0026#34;🇭🇰 港hk\u0026#34; proxies: - {name: 🇭🇰 港hk, server: ...[snip]... true} 完成后选择重启应用，当订阅更新时，配置将消失。\n","date":"2024-11-25T22:24:27+08:00","permalink":"https://yutianovo.github.com/p/clash-verge-%E5%B0%86%E8%AE%A2%E9%98%85%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%90%86%E5%9C%B0%E5%9D%80%E4%BD%9C%E4%B8%BA%E5%8D%95%E4%B8%AA%E7%AB%AF%E5%8F%A3%E5%BC%80%E6%94%BE/","title":"Clash Verge 将订阅中的代理地址作为单个端口开放"}]